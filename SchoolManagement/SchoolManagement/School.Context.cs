//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagement
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SchoolManagementEntities : DbContext
    {
        public SchoolManagementEntities()
            : base("name=SchoolManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<OfficeAssignment> OfficeAssignments { get; set; }
        public virtual DbSet<OnlineCourse> OnlineCourses { get; set; }
        public virtual DbSet<OnsiteCourse> OnsiteCourses { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<StudentGrade> StudentGrades { get; set; }
    
        [DbFunction("SchoolManagementEntities", "CourseByInstructor")]
        public virtual IQueryable<CourseByInstructor_Result> CourseByInstructor(string fN, string lN)
        {
            var fNParameter = fN != null ?
                new ObjectParameter("FN", fN) :
                new ObjectParameter("FN", typeof(string));
    
            var lNParameter = lN != null ?
                new ObjectParameter("LN", lN) :
                new ObjectParameter("LN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CourseByInstructor_Result>("[SchoolManagementEntities].[CourseByInstructor](@FN, @LN)", fNParameter, lNParameter);
        }
    
        [DbFunction("SchoolManagementEntities", "CourseOfMaths")]
        public virtual IQueryable<CourseOfMaths_Result> CourseOfMaths()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CourseOfMaths_Result>("[SchoolManagementEntities].[CourseOfMaths]()");
        }
    
        [DbFunction("SchoolManagementEntities", "StudentGradeInstructor")]
        public virtual IQueryable<StudentGradeInstructor_Result> StudentGradeInstructor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StudentGradeInstructor_Result>("[SchoolManagementEntities].[StudentGradeInstructor]()");
        }
    
        public virtual int deldata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deldata");
        }
    
        public virtual ObjectResult<InstructorCourse_Result> InstructorCourse(string fN, string lN)
        {
            var fNParameter = fN != null ?
                new ObjectParameter("FN", fN) :
                new ObjectParameter("FN", typeof(string));
    
            var lNParameter = lN != null ?
                new ObjectParameter("LN", lN) :
                new ObjectParameter("LN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InstructorCourse_Result>("InstructorCourse", fNParameter, lNParameter);
        }
    
        public virtual int popdata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("popdata");
        }
    
        public virtual ObjectResult<StudentByDept_Result> StudentByDept(string d)
        {
            var dParameter = d != null ?
                new ObjectParameter("D", d) :
                new ObjectParameter("D", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentByDept_Result>("StudentByDept", dParameter);
        }
    }
}
