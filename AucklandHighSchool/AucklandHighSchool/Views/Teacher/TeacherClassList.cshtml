@model AucklandHighSchool.Models.Teacher
@{
    ViewBag.Title = "Class List by Teacher";
}

<h2>Add/Remove Classes</h2>

@using (Html.BeginForm("ClassAdd", "Teacher"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TeacherID: @Model.TeacherID</h4>
        <h4>Name: @Model.FirstName  @Model.LastName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <h4 style="display: inline-block">Class: </h4>
                @Html.TextBox("Name", Model.FirstName + "'s Class", new { @class = "form-control", style = "display: inline-block" })
                &nbsp;
                <h4 style="display: inline-block">Subject: </h4>
                @Html.DropDownList("SubjectID", (IEnumerable<SelectListItem>)ViewBag.SubjectList, htmlAttributes: new { @class = "form-control", style = "display: inline-block" }) &nbsp;
                @Html.ValidationMessageFor(model => model, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TeacherID)
                @Html.AddIconButtonSubmit("Add")
                <button type="button" class="btn btn-default" onclick="ShowSubjectDetail()">Detail</button>
                <br />
                @Html.ValidationMessage("ClassName", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}



<table class="table" style="width: 700px">
    <tr>
        <th>
            Class ID
        </th>
        <th>
            Class Name
        </th>
        <th>
            Subject Name
        </th>
        <th>
            Actions
        </th>
    </tr>

    @foreach (var item in Model.Classes)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClassID)
            </td>
            <td>
                @Html.ActionLink(item.Name, "DetailClass", "Class", new { Id = item.ClassID }, null)
            </td>
            <td>
                @Html.ActionLink(item.Subject.Name, "DetailSubject", "Subject", new { Id = item.SubjectID }, null)
            </td>
            <td>
                @Html.DeleteLinkPostTwo("Remove", "ClassRemove", "Teacher", "ClassId", item.ClassID.ToString(), "RedirectUrl", Request.Url.PathAndQuery)
                @Html.ActionLink("Edit", "EditClass", "Class", new { Id = item.ClassID, RedirectUrl = Request.Url.PathAndQuery }, new { @class = "btn btn-default"})
            </td>
        </tr>
    }

</table>

<br />

<div>
    @Html.IconLink("Back to Teacher", "DetailTeacher", new { Id = Model.TeacherID }, "glyphicon glyphicon-chevron-left", new { @class = "btn btn-primary" })
    @Html.BackToListIconLinkController("Back to List", "TeacherList", "Teacher")
</div>

<script type="text/javascript" language="javascript">
    function ShowSubjectDetail() {
        var e = document.getElementById("SubjectID");
        var SubjectID = e.options[e.selectedIndex].value;
        var url = '@Url.Action("DetailSubject", "Subject")';
        window.location.assign(url + '?Id=' + SubjectID);
    }
</script>

